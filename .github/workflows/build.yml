name: Build TWiLight Menu++

on:
  push:
    branches: ["*"]
    paths-ignore:
      - 'README.md'
  pull_request:
    branches: ["*"]
    paths-ignore:
      - 'README.md'
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    container: devkitpro/devkitarm:20200528
    name: "Build with Docker using devKitARM r54"
    outputs:
      commit_tag: ${{ steps.make-cias.outputs.commit_tag }}
      commit_message: ${{ steps.make-cias.outputs.commit_message }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v1
      - name: "Install tools"
        run: |
          sudo apt-get update
          sudo apt-get install p7zip-full python jq -y
      - name: "Build TWiLightMenu++"
        run: |
          make package
      - name: "Make booter and TWiLightMenu CIAs"
        id: make-cias
        run: |
          cd booter/
          chmod +x make_cia
          ./make_cia --srl="booter.nds" --id_0=$(git rev-parse --short=7 HEAD) --tikID=$(git rev-parse --short=16 HEAD)
          mkdir -p "../7zfile/3DS - CFW users/"
          cp "booter.cia" "../7zfile/3DS - CFW users/TWiLight Menu.cia"

          cd ../rungame/
          chmod +x make_cia
          ./make_cia --srl="rungame.nds" --id_0=$(git rev-parse --short=7 HEAD) --tikID=$(git rev-parse --short=16 HEAD)
          cp "rungame.cia" "../7zfile/3DS - CFW users/TWiLight Menu - Game booter.cia"

          echo "::set-output name=commit_tag::$(git log --format=%h -1)"
          echo "::set-output name=commit_message::$(git log --pretty=format:'%an - %s' -1)"
      - name: "Make WoodR4 _DS_MENU.DAT files"
        run: |
          cd booter_fc/r4_menu_dat/
          cp "../booter_fc.nds" "_DS_MENU.nds"
          ./dlditool r4_sd.dldi _DS_MENU.nds

          ./r4enc _DS_MENU.nds
          mv "_DS_MENU.nds.DAT" "../../7zfile/Flashcard users/Autoboot/akMenu-Wood UI root/_DS_MENU.DAT"
      - name: "Pack 7z Package for nightly"
        if: ${{ !startsWith(github.ref, 'refs/tags') }}
        run: |
          rm -r 7zfile/_nds/TWiLightMenu/*menu/

          mv 7zfile/ TWiLightMenu/
          7z a TWiLightMenu.7z TWiLightMenu/
          rm -r TWiLightMenu/_nds/TWiLightMenu/apfix/
          rm -r TWiLightMenu/3DS\ -\ CFW\ users/_nds/TWiLightMenu/widescreen/
          7z a TWiLightMenu-Lite.7z TWiLightMenu/
          mkdir -p ~/artifacts
          cp TWiLightMenu.7z ~/artifacts
          cp TWiLightMenu-Lite.7z ~/artifacts
      - name: "Pack 7z Package for release"
        if: ${{ startsWith(github.ref, 'refs/tags') }}
        run: |
          mkdir 7zfile/_nds/TWiLightMenu/boxart/
          mkdir 7zfile/_nds/TWiLightMenu/gamesettings/

          # nds-bootstrap
          mkdir nds-bootstrap
          cd nds-bootstrap
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/ahezard/nds-bootstrap/releases/latest -o nds-bootstrap.json
          curl -L $(jq --raw-output '.assets[0].browser_download_url' nds-bootstrap.json) -o nds-bootstrap.7z
          7z x nds-bootstrap.7z
          mv nds-bootstrap.* ..
          mkdir TWiLightMenu
          mv release-bootstrap.ver TWiLightMenu
          cd ..
          curl -L https://github.com/TWLBot/Builds/blob/master/nds-bootstrap.7z?raw=true -o nds-bootstrap.7z
          7z x nds-bootstrap.7z
          mv nds-bootstrap/TWiLightMenu/release-bootstrap.ver 7zfile/_nds/TWiLightMenu
          mv nds-bootstrap/TWiLightMenu/nightly-bootstrap.ver 7zfile/_nds/TWiLightMenu
          mv nds-bootstrap/b4ds-release.nds 7zfile/Flashcard\ users/_nds/
          mv nds-bootstrap/b4ds-nightly.nds 7zfile/Flashcard\ users/_nds/
          mv nds-bootstrap/nds-bootstrap-release.nds 7zfile/_nds/
          mv nds-bootstrap/nds-bootstrap-nightly.nds 7zfile/_nds/
          # Permissions are hecked up by Docker
          sudo mkdir 7zfile/DSi\&3DS\ -\ SD\ card\ users/_nds
          mv nds-bootstrap/nds-bootstrap-hb-release.nds 7zfile/DSi\&3DS\ -\ SD\ card\ users/_nds/
          mv nds-bootstrap/nds-bootstrap-hb-nightly.nds 7zfile/DSi\&3DS\ -\ SD\ card\ users/_nds/

          # version.txt
          printf "TWiLight Menu++: $(git describe --tags)\nnds-bootstrap: $(jq --raw-output '.tag_name' nds-bootstrap.json)\n\nRocketRobz, ahezard\n" > 7zfile/version.txt

          # Really dumb hidden file that for some reason fixes the releases
          touch 7zfile/.ignoreme

          cd 7zfile
          7z a TWiLightMenu.7z .
          mkdir -p ~/artifacts
          cp TWiLightMenu.7z ~/artifacts
      - name: "Publish build to GH Actions"
        uses: actions/upload-artifact@v2
        with:
          path: ~/artifacts/*
          name: "build"

  # Only run this for non-PR jobs.
  publish_build_twlbot:
    runs-on: ubuntu-latest
    name: "Publish build to TWLBot"
    if: ${{ success() && !startsWith(github.ref, 'refs/pull') && secrets.GITHUB_TOKEN }}
    needs: build
    env:
      COMMIT_TAG: ${{ needs.build.outputs.commit_tag }}
      COMMIT_MESSAGE: ${{ needs.build.outputs.commit_message }}
    outputs:
      current_date: ${{ steps.commit.outputs.current_date }}
      twlbot_commit: ${{ steps.commit.outputs.twlbot_commit }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v1
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: "build"
          path: "build"
      - name: Upload to DS-Homebrew/TWiLightMenu release
        if: ${{ startsWith(github.ref, 'refs/tags') }}
        run: |
          ID=$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)

          for file in ${{ github.workspace }}/build/*; do
            AUTH_HEADER="Authorization: token ${{ secrets.GITHUB_TOKEN }}"
            CONTENT_LENGTH="Content-Length: $(stat -c%s $file)"
            CONTENT_TYPE="Content-Type: application/7z-x-compressed"
            UPLOAD_URL="https://uploads.github.com/repos/${{ github.repository }}/releases/$ID/assets?name=$(basename $file)"

            curl -XPOST -H "$AUTH_HEADER" -H "$CONTENT_LENGTH" -H "$CONTENT_TYPE" --upload-file "$file" "$UPLOAD_URL"
          done
      - name: "Commit and push to TWLBot/Builds"
        id: "commit"
        run: |
          CURRENT_DATE=$(date +"%Y%m%d-%H%M%S")
          echo "::set-output name=current_date::$CURRENT_DATE"

          git config --global user.email "flamekat54@aol.com"
          git config --global user.name "TWLBot"
          git clone --depth 1 https://${{ secrets.TWLBOT_TOKEN }}@github.com/TWLBot/Builds.git
          cd Builds/
          cp ${{ github.workspace }}/build/* .
          git stage .
          git commit -m "TWiLightMenu | $COMMIT_TAG"
          git tag v$CURRENT_DATE
          git push origin v$CURRENT_DATE
          echo "::set-output name=twlbot_commit::$(git log --format=%H -1)"
      - name: Release to TWLBot/Builds
        run: |
          AUTH_HEADER="Authorization: token ${{ secrets.TWLBOT_TOKEN }}"
          CONTENT_TYPE="Content-Type: application/json"
          API_URL="https://api.github.com/repos/TWLBot/Builds/releases"
          RELEASE_INFO="{\"tag_name\": \"v${{ steps.commit.outputs.current_date }}\", \"name\": \"TWiLightMenu | $COMMIT_TAG\", \"body\": \"$COMMIT_MESSAGE\", "prerelease": true}"

          RESPONSE=$(curl -XPOST -H "$AUTH_HEADER" -H "$CONTENT_TYPE" "$API_URL" -d "$RELEASE_INFO")

          ID=$(echo $RESPONSE | jq --raw-output '.id')

          for file in ${{ github.workspace }}/build/*; do
            AUTH_HEADER="Authorization: token ${{ secrets.TWLBOT_TOKEN }}"
            CONTENT_LENGTH="Content-Length: $(stat -c%s $file)"
            CONTENT_TYPE="Content-Type: application/7z-x-compressed"
            UPLOAD_URL="https://uploads.github.com/repos/TWLBot/Builds/releases/$ID/assets?name=$(basename $file)"

            curl -XPOST -H "$AUTH_HEADER" -H "$CONTENT_LENGTH" -H "$CONTENT_TYPE" --upload-file "$file" "$UPLOAD_URL"
          done

  send_webhook_success:
    runs-on: ubuntu-latest
    needs: [publish_build_twlbot, build]
    name: "Send Discord success webhook"
    if: ${{ success() && !startsWith(github.ref, 'refs/pull') && secrets.WEBHOOK_URL }}
    env:
      COMMIT_TAG: ${{ needs.build.outputs.commite_tag }}
      COMMIT_MESSAGE: ${{ needs.build.outputs.commit_message }}
      CURRENT_DATE: ${{ needs.publish_build_twlbot.outputs.current_date }}
      TWLBOT_COMMIT: ${{ needs.publish_build_twlbot.outputs.twlbot_commit }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v1
      - name: "Send success webhook"
        run: |
          curl -o send.sh https://raw.githubusercontent.com/DS-Homebrew/discord-webhooks/master/send-ghactions.sh
          chmod +x send.sh
          ./send.sh success ${{ secrets.WEBHOOK_URL }}

  send_webhook_failure:
    runs-on: ubuntu-latest
    needs: [publish_build_twlbot, build]
    name: "Send Discord failure webhook"
    if: ${{ failure() && !startsWith(github.ref, 'refs/pull') && secrets.WEBHOOK_URL }}
    env:
      COMMIT_TAG: ${{ needs.build.outputs.commite_tag }}
      COMMIT_MESSAGE: ${{ needs.build.outputs.commit_message }}
      CURRENT_DATE: ${{ needs.publish_build_twlbot.outputs.current_date }}
      TWLBOT_COMMIT: ${{ needs.publish_build_twlbot.outputs.twlbot_commit }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v1
      - name: "Send failure webhook"
        run: |
          curl -o send.sh https://raw.githubusercontent.com/DS-Homebrew/discord-webhooks/master/send-ghactions.sh
          chmod +x send.sh
          ./send.sh failure ${{ secrets.WEBHOOK_URL }}
